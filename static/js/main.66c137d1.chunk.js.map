{"version":3,"sources":["types/Status.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","utils/httpClients.ts","components/TodoModal/TodoModal.tsx","service/user.ts","service/FilterTodo.ts","App.tsx","service/todo.ts","index.tsx"],"names":["Status","TodoList","todos","selectedTodo","userInfo","className","map","todo","id","completed","cn","title","type","onClick","TodoFilter","handleOption","handleText","value","text","hasClear","onChange","event","placeholder","style","pointerEvents","trim","Loader","getData","url","fetch","then","response","json","TodoModal","close","useState","selectedUser","setSelectedUser","isLoadingDetails","setIsLoadingDetails","useEffect","users","find","user","userId","finally","setTimeout","href","email","name","FilterTodo","status","filteByText","filteredTodos","filter","toLowerCase","includes","All","Active","App","setTodos","selectedValue","setSelectedValue","isLoading","setIsLoading","setText","selectedtodo","setSelectedTodo","newValue","target","newText","undefined","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.66c137d1.chunk.js","sourcesContent":["export enum Status {\n  All = 'all',\n  Completed = 'completed',\n  Active = 'active',\n}\n","import cn from 'classnames';\nimport React from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  selectedTodo: Todo | undefined,\n  userInfo: (selectedtodo: Todo) => void,\n};\n\nexport const TodoList: React.FC<Props> = (\n  {\n    todos,\n    selectedTodo,\n    userInfo,\n  },\n) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => (\n          <tr data-cy=\"todo\" className=\"\" key={todo.id}>\n            <td className=\"is-vcentered\">{todo.id}</td>\n            {todo.completed\n              ? (\n                <td className=\"is-vcentered\">\n                  <span className=\"icon\" data-cy=\"iconCompleted\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                </td>\n              )\n              : <td className=\"is-vcentered\" />}\n            <td className=\"is-vcentered\" />\n            <td className=\"is-vcentered is-expanded\">\n              <p className={cn({\n                'has-text-danger': !todo.completed,\n                'has-text-success': todo.completed,\n              })}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => userInfo(todo)}\n              >\n                <span className=\"icon\">\n                  <i className={cn('far', {\n                    'fa-eye': selectedTodo?.id !== todo.id,\n                    'fa-eye-slash': selectedTodo?.id === todo.id,\n                  })}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import React from 'react';\nimport { Status } from '../../types/Status';\n\ntype Props = {\n  handleOption: (event: React.ChangeEvent<HTMLSelectElement>) => void,\n  handleText: (event: React.ChangeEvent<HTMLInputElement>) => void,\n  value: Status,\n  text: string,\n  hasClear: () => void,\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  handleOption,\n  handleText,\n  value,\n  text,\n  hasClear,\n}) => {\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={value}\n            onChange={(event) => handleOption(event)}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          value={text}\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          onChange={(event) => handleText(event)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {text.trim() && (\n            // eslint-disable-next-line jsx-a11y/control-has-associated-label\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={hasClear}\n            />\n          )}\n\n        </span>\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","const BASE_URL\n= 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nexport function getData<T>(url: string): Promise<T> {\n  return fetch(BASE_URL + url)\n    .then(response => response.json());\n}\n","import React, { useEffect, useState } from 'react';\nimport { User } from '../../types/User';\nimport { Todo } from '../../types/Todo';\nimport { Loader } from '../Loader';\nimport { getUserDetail } from '../../service/user';\n\ntype Props = {\n  selectedTodo: Todo,\n  close: () => void,\n};\n\nexport const TodoModal: React.FC<Props> = (\n  {\n    selectedTodo,\n    close,\n  },\n) => {\n  const [selectedUser, setSelectedUser] = useState<User | undefined>();\n  const [isLoadingDetails, setIsLoadingDetails] = useState(true);\n\n  useEffect(() => {\n    getUserDetail()\n      .then(users => users.find(user => user.id === selectedTodo?.userId))\n      .then(setSelectedUser)\n      .finally(() => setTimeout(() => {\n        setIsLoadingDetails(false);\n      }, 1000));\n  }, [selectedUser]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isLoadingDetails ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${selectedTodo?.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={close}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedTodo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {/* <strong className=\"has-text-success\">Done</strong> */}\n              {\n                selectedTodo?.completed\n                  ? <strong className=\"has-text-success\">Done</strong>\n                  : <strong className=\"has-text-danger\">Planned</strong>\n              }\n\n              {' by '}\n\n              <a href={`mailto:{${selectedUser?.email}}`}>\n                {selectedUser?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import { getData } from '../utils/httpClients';\nimport { User } from '../types/User';\n\nexport function getUserDetail() {\n  return getData<User[]>('/users.json');\n}\n","import { Todo } from '../types/Todo';\nimport { Status } from '../types/Status';\n\nexport const FilterTodo = (todos: Todo[], text: string, status: Status) => {\n  let filteByText = todos;\n  let filteredTodos = filteByText;\n\n  if (text) {\n    filteByText = todos.filter(\n      (todo: Todo) => todo.title.toLowerCase().includes(text.toLowerCase()),\n    );\n  }\n\n  switch (status) {\n    case Status.All:\n      filteredTodos = filteByText;\n      break;\n\n    case Status.Active:\n      filteredTodos = filteByText.filter((todo: Todo) => !todo.completed);\n      break;\n\n    default:\n      filteredTodos = filteByText.filter((todo: Todo) => todo.completed);\n  }\n\n  return filteredTodos;\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { Status } from './types/Status';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { FilterTodo } from './service/FilterTodo';\nimport { getTodos } from './service/todo';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [selectedValue, setSelectedValue] = useState(Status.All);\n  const [isLoading, setIsLoading] = useState(true);\n  const [text, setText] = useState('');\n  const [selectedtodo, setSelectedTodo] = useState<Todo | undefined>();\n\n  const getTodo = (todo: Todo) => {\n    setSelectedTodo(todo);\n  };\n\n  const handleValue = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const newValue = event.target.value as Status;\n\n    setSelectedValue(newValue);\n  };\n\n  const handleClear = () => {\n    setText('');\n  };\n\n  const handleText = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newText = event.target.value;\n\n    setText(newText);\n  };\n\n  const handleCloseButton = () => {\n    setSelectedTodo(undefined);\n  };\n\n  useEffect(() => {\n    getTodos()\n      .then(setTodos)\n      .finally(() => setIsLoading(false));\n  }, [selectedValue]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                handleOption={handleValue}\n                value={selectedValue}\n                handleText={handleText}\n                text={text}\n                hasClear={handleClear}\n              />\n            </div>\n\n            <div className=\"block\">\n              {isLoading && <Loader />}\n\n              <TodoList\n                todos={FilterTodo(todos, text, selectedValue)}\n                selectedTodo={selectedtodo}\n                userInfo={getTodo}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {!!selectedtodo\n        && (\n          <TodoModal\n            selectedTodo={selectedtodo}\n            close={handleCloseButton}\n          />\n        )}\n    </>\n  );\n};\n","import { getData } from '../utils/httpClients';\nimport { Todo } from '../types/Todo';\n\nexport function getTodos() {\n  return getData<Todo[]>('/todos.json');\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}